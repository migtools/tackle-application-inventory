#
# Copyright Â© 2021 the Konveyor Contributors (https://konveyor.io/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

quarkus.application.name=tackle-application-inventory
quarkus.test.native-image-profile=test

# REST configuration
quarkus.http.root-path = /application-inventory
# requested to have the prototype html page to work
quarkus.http.cors=true

# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = application_inventory
quarkus.datasource.password = application_inventory
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/application_inventory_db
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/application_inventory_db
%local.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/application_inventory_db
quarkus.datasource.jdbc.url = jdbc:postgresql://application-inventory-postgresql:5432/application_inventory_db
#quarkus.hibernate-orm.jdbc.timezone = UTC
# Query logging disabled in every env but dev
%dev.quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.sql=false
%dev.quarkus.hibernate-orm.log.bind-parameters=true
# bind-parameters (BasicBinder) is at TRACE so min-level must be configured properly
%dev.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".min-level=FINER
%dev.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=FINER
# SQL queries with variable bindings useful during local testing in case of issues to debug
#%test.quarkus.hibernate-orm.log.sql=true
#%test.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".min-level=FINER
#%test.quarkus.log.category."org.hibernate.type.descriptor.sql.BasicBinder".level=FINER

# use 'update' to generate SQL scripts, validate them and then create a new file into resources/db/migration folder
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql
%test.quarkus.hibernate-orm.database.generation = validate
# DO NOT REMOVE/CHANGE. Make sure to not drop our database in production!
%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file
%dev.quarkus.hibernate-orm.metrics.enabled=true

# flyway configuration
quarkus.flyway.migrate-at-start=true
%dev.quarkus.flyway.migrate-at-start=false
%test.quarkus.flyway.locations=db/migration,db/test-data
%minikube.quarkus.flyway.locations=db/migration,db/test-data

# workaround to use kubernetes.json templates with minikube
# since the minikube.json generated templates are broken
#%minikube.quarkus.kubernetes.image-pull-policy=IfNotPresent

# enabled because useful when checking metrics
quarkus.micrometer.export.json.enabled=true

# OIDC Configuration
%dev.quarkus.oidc.auth-server-url=https://localhost:8543/auth/realms/quarkus
%local.quarkus.oidc.auth-server-url=https://localhost:8543/auth/realms/quarkus
#%dev.quarkus.oidc.client-id=backend-service
#%dev.quarkus.oidc.credentials.secret=secret
#%dev.quarkus.oidc.tls.verification=none
#%test.quarkus.oidc.enabled=false
quarkus.oidc.auth-server-url=http://keycloak:8080/auth/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
quarkus.oidc.tls.verification=none
# from https://github.com/quarkusio/quarkus/issues/16294
quarkus.oidc.discovery-enabled=false
# from /auth/realms/quarkus/.well-known/openid-configuration
quarkus.oidc.jwks-path=protocol/openid-connect/certs

# this must be better understood
#quarkus.keycloak.policy-enforcer.enable=true

quarkus.http.auth.policy.admin-policy.roles-allowed=admin
quarkus.http.auth.policy.application-read-policy.roles-allowed=inventory:application:read
quarkus.http.auth.policy.application-write-policy.roles-allowed=inventory:application:write
quarkus.http.auth.policy.application-import-read-policy.roles-allowed=inventory:application-import:read
quarkus.http.auth.policy.application-import-write-policy.roles-allowed=inventory:application-import:write
quarkus.http.auth.policy.application-dependency-write-policy.roles-allowed=inventory:application-dependency:write
quarkus.http.auth.policy.application-review-write-policy.roles-allowed=inventory:application-review:write

quarkus.http.auth.permission.application-read1.methods=GET
quarkus.http.auth.permission.application-read1.paths=/application-inventory/application/*,/application-inventory/applications-dependency/*,/application-inventory/review/*
quarkus.http.auth.permission.application-read1.policy=application-read-policy
quarkus.http.auth.permission.application-read2.methods=POST
quarkus.http.auth.permission.application-read2.paths=/application-inventory/report/adoptionplan/*
quarkus.http.auth.permission.application-read2.policy=application-read-policy

quarkus.http.auth.permission.application-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.application-write.paths=/application-inventory/application/*
quarkus.http.auth.permission.application-write.policy=application-write-policy

quarkus.http.auth.permission.application-import-read.methods=GET
quarkus.http.auth.permission.application-import-read.paths=/application-inventory/import-summary/*,/application-inventory/application-import/*,/application-inventory/csv-export/*
quarkus.http.auth.permission.application-import-read.policy=application-import-read-policy

quarkus.http.auth.permission.application-import-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.application-import-write.paths=/application-inventory/file/upload/*,/application-inventory/import-summary/*
quarkus.http.auth.permission.application-import-write.policy=application-import-write-policy

quarkus.http.auth.permission.application-dependency-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.application-dependency-write.paths=/application-inventory/applications-dependency/*
quarkus.http.auth.permission.application-dependency-write.policy=application-dependency-write-policy

quarkus.http.auth.permission.application-review-write.methods=POST,PUT,DELETE
quarkus.http.auth.permission.application-review-write.paths=/application-inventory/review/*
quarkus.http.auth.permission.application-review-write.policy=application-review-write-policy

# 'q' endpoints must be permitted (e.g. the /q/metrics and /q/health endpoints)
quarkus.http.auth.permission.permit1.paths=/application-inventory/q/*
quarkus.http.auth.permission.permit1.policy=permit

quarkus.http.auth.permission.remaining-endpoints.paths=/application-inventory/*
quarkus.http.auth.permission.remaining-endpoints.policy=admin-policy

quarkus.kubernetes.part-of=tackle
quarkus.openshift.part-of=${quarkus.kubernetes.part-of}
#quarkus.kubernetes.expose=true
#quarkus.openshift.expose=${quarkus.kubernetes.expose}
quarkus.kubernetes.labels."app.kubernetes.io/component"=rest
quarkus.openshift.labels."app.kubernetes.io/component"=rest

io.tackle.applicationinventory.services.Controls.service=tackle-controls:8080
io.tackle.applicationinventory.services.TagService/mp-rest/uri=http://${io.tackle.applicationinventory.services.Controls.service}
io.tackle.applicationinventory.services.BusinessServiceService/mp-rest/uri=http://${io.tackle.applicationinventory.services.Controls.service}
