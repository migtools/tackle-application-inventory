<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.tackle</groupId>
  <artifactId>application-inventory</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <docker-plugin.version>0.28.0</docker-plugin.version>
    <jkube.version>1.0.2</jkube.version>
    <jkube.generator.quarkus.nativeImage>true</jkube.generator.quarkus.nativeImage>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.version>2.6.2.Final</quarkus.platform.version>
    <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
<!--    <quarkus.platform.version>999-SNAPSHOT</quarkus.platform.version>-->
<!--    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>-->
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus-plugin.version>2.5.4.Final</quarkus-plugin.version>
    <surefire-plugin.version>2.22.2</surefire-plugin.version>
    <testcontainers.version>1.16.0</testcontainers.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <jacoco.version>0.8.7</jacoco.version>
    <quarkus.package.type>jar</quarkus.package.type>
    <keycloak.version>12.0.3</keycloak.version>
    <jgrapht.version>1.5.1</jgrapht.version>
  </properties>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.github.konveyor.tackle-commons-rest</groupId>
      <artifactId>commons-rest</artifactId>
      <version>0.0.2</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-agroal</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-rest-data-panache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-links</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-container-image-jib</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-flyway</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-vertx</artifactId>
    </dependency>
    <!-- todo remove Hibernate Validator? -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-minikube</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-oidc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-oidc-token-propagation</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-keycloak-authorization</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jgrapht</groupId>
      <artifactId>jgrapht-core</artifactId>
      <version>${jgrapht.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.konveyor.tackle-commons-rest</groupId>
      <artifactId>commons-rest-test</artifactId>
      <version>0.0.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.slf4j</groupId>
      <artifactId>slf4j-jboss-logmanager</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>${exec-maven-plugin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <classifier>runtime</classifier>
      <scope>test</scope>
      <version>${jacoco.version}</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.20.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.12.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.30.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.1.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <jacoco-agent.destfile>${project.build.directory}/jacoco-ut.exec</jacoco-agent.destfile>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
            <keycloak.version>${keycloak.version}</keycloak.version>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <id>tackle-application-inventory-IT</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                    <keycloak.version>${keycloak.version}</keycloak.version>
                  </systemPropertyVariables>
                  <trimStackTrace>false</trimStackTrace>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <environmentVariables>
                <DOCKER_HOST>unix:///run/user/1000/podman/podman.sock</DOCKER_HOST>
                <!--            <TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>-->
                <TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED>true</TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED>
                <!--                <api.version>v2</api.version>-->
                <TESTCONTAINERS_CHECKS_DISABLE>true</TESTCONTAINERS_CHECKS_DISABLE>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.native.container-build>true</quarkus.native.container-build>
        <quarkus.package.type>native</quarkus.package.type>
        <quarkus.native.builder-image>quay.io/quarkus/ubi-quarkus-mandrel:21.3-java11</quarkus.native.builder-image>
      </properties>
    </profile>
    <profile>
      <id>container-image</id>
      <properties>
        <quarkus.container-image.build>true</quarkus.container-image.build>
        <quarkus.container-image.tag>${quarkus.application.version:latest}-${quarkus.package.type}</quarkus.container-image.tag>
        <quarkus.jib.base-native-image>registry.access.redhat.com/ubi8-minimal@sha256:4d6547bbb7c5fe0f0d37b491c0c1975ff96bf4cf1c26dd665e3a5d70918b5564</quarkus.jib.base-native-image>
      </properties>
    </profile>
    <profile>
      <id>podman</id>
      <activation>
        <property>
          <name>!env.DOCKER_HOST</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
              <environmentVariables>
                <DOCKER_HOST>unix:///run/user/1000/podman/podman.sock</DOCKER_HOST>
<!--            <TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>-->
                <TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED>true</TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED>
<!--                <api.version>v2</api.version>-->
                <TESTCONTAINERS_CHECKS_DISABLE>true</TESTCONTAINERS_CHECKS_DISABLE>
              </environmentVariables>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>start-async-podman-service</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>podman</executable>
                  <arguments>
                    <argument>system</argument>
                    <argument>service</argument>
                    <argument>-t</argument>
                    <argument>0</argument>
                  </arguments>
                  <async>true</async>
                </configuration>
              </execution>
              <execution>
                <id>push-image-to-minikube</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${project.build.resources[0].directory}/scripts/push-image-to-minikube.sh</executable>
                  <arguments>
                    <argument>${project.artifactId}</argument>
                    <argument>${project.version}</argument>
                    <argument>${quarkus.package.type}</argument>
                  </arguments>
                  <async>false</async>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
           <plugin>
             <groupId>org.jacoco</groupId>
             <artifactId>jacoco-maven-plugin</artifactId>
             <version>${jacoco.version}</version>
             <executions>
               <execution>
                 <id>instrument-ut</id>
                 <goals>
                   <goal>instrument</goal>
                 </goals>
               </execution>
               <execution>
                 <id>restore-ut</id>
                 <goals>
                   <goal>restore-instrumented-classes</goal>
                 </goals>
               </execution>
               <execution>
                 <id>report-ut</id>
                 <goals>
                   <goal>report</goal>
                 </goals>
                 <configuration>
                   <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                   <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                 </configuration>
               </execution>
               <execution>
                 <id>instrument-it</id>
                 <phase>pre-integration-test</phase>
                 <goals>
                   <goal>instrument</goal>
                 </goals>
               </execution>
               <execution>
                 <id>restore-it</id>
                 <phase>post-integration-test</phase>
                 <goals>
                   <goal>restore-instrumented-classes</goal>
                 </goals>
               </execution>
               <execution>
                 <id>report-it</id>
                 <phase>post-integration-test</phase>
                 <goals>
                   <goal>report</goal>
                 </goals>
                 <configuration>
                   <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                   <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                 </configuration>
               </execution>
             </executions>
           </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
